services:
  postgres:
    image: postgres:latest
    container_name: capital_mind_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - backend # O contêiner do PostgreSQL faz parte da rede "backend"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      DB_HOST: postgres
      APP_PORT: ${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - backend
    depends_on:
      - postgres

volumes:
  postgres-data:

# Conexão entre os contêineres
networks:
  backend:
    driver: bridge # Usando o driver "bridge" para comunicação entre os contêineres


